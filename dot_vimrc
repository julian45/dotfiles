set nocompatible              " be iMproved, required
filetype off                  " required

" set t_Co=256
set laststatus=2 " Make the airline show up everywhere
" Install vim-plug if we don't already have it
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
" Initialize vim-plug
call plug#begin()
Plug 'junegunn/vim-plug'

" Stuff from tpope
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
" Plug 'tpope/vim-fireplace'
" Plug 'tpope/vim-salve'

" Linting
" Plug 'vim-syntastic/syntastic'
" Plug 'w0rp/ale'

" fzf integration
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
" Themes
Plug 'altercation/vim-colors-solarized'

" pandoc- and Quarto-related plugins
Plug 'vim-pandoc/vim-pandoc-syntax'
Plug 'quarto-dev/quarto-vim'

" NERD plugins
Plug 'scrooloose/nerdtree'
Plug 'vim-scripts/commentToggle'

" Airline and associated plugins
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'airblade/vim-gitgutter'

" Others
Plug 'rust-lang/rust.vim'
Plug 'vimwiki/vimwiki'
Plug 'vim-scripts/Conque-Shell'
Plug 'editorconfig/editorconfig-vim'
Plug 'ntpeters/vim-better-whitespace'
" Plug 'venantius/vim-eastwood'
Plug 'dodie/vim-disapprove-deep-indentation'
Plug 'chr4/sslsecure.vim'
Plug 'dstein64/vim-startuptime'

" All of your Plugs must be added before the following line
call plug#end()            " required
filetype plugin indent on    " required

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1

let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_sh_checkers = ['shellcheck']
let g:syntastic_ruby_checkers = ['rubocop']
let g:syntastic_yaml_checkers = ['yamllint']

let g:syntastic_error_symbol = '‚ùå'
let g:syntastic_style_error_symbol = '‚ÅâÔ∏è'
let g:syntastic_warning_symbol = '‚ö†Ô∏è'
let g:syntastic_style_warning_symbol = 'üí©'

highlight link SyntasticErrorSign SignColumn
highlight link SyntasticWarningSign SignColumn
highlight link SyntasticStyleErrorSign SignColumn
highlight link SyntasticStyleWarningSign SignColumn

" Keyboard mappings
inoremap jk <ESC>
let mapleader=','
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>
nnoremap ; :
set backspace=indent,eol,start

filetype plugin indent on
filetype plugin on
syntax enable
set number
set background=dark
colorscheme solarized
let g:airline_theme='solarized'
let g:airline_solarized_bg='dark'
" let g:rehash256 = 1
if system('uname -s') == "Darwin\n"
	" macOS
	let g:gitgutter_git_executable = '/opt/homebrew/bin/git'
else
	" Ubuntu
	let g:gitgutter_git_executable = '/usr/bin/git'
endif

" Using fzf (installed via Homebrew) in Vim
set rtp+=$HOME/.fzf
