# Path to your oh-my-zsh installation.
export ZSH="$HOME/.zgenom/sources/ohmyzsh/ohmyzsh/___"

# Aliases
alias aui="sudo apt-get update; sudo apt-get upgrade; sudo apt-get dist-upgrade"
alias kb="keybase"
# alias gpg="gpg2"
alias cls="clear"

# load zgenom
source "${HOME}/.zgenom/zgenom.zsh"

# before oh-my-zsh runs (and thus runs compinit), enable homebrew completions
# see https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
if type brew &>/dev/null; then
	FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

	autoload -Uz compinit
	compinit
fi

# plugin time
if ! zgenom saved; then
	echo "Creating a zgenom save"

	zgenom ohmyzsh

	# plugins
	zgenom ohmyzsh plugins/git
	zgenom ohmyzsh plugins/sudo
	zgenom ohmyzsh plugins/brew
	zgenom ohmyzsh plugins/emoji
	zgenom ohmyzsh plugins/common-aliases
	zgenom ohmyzsh plugins/systemd
	if [[ -f /etc/lsb-release ]] || [[ -f /etc/os-release ]] then
		zgenom ohmyzsh plugins/debian
	fi
	if [[ -f /etc/arch-release ]] then
		zgenom ohmyzsh plugins/archlinux
	fi
	if [[ $(uname) == "Darwin" ]] then
		zgenom ohmyzsh plugins/macos
		zgenom load unixorn/tumult.plugin.zsh
	fi
	zgenom load zsh-users/zsh-syntax-highlighting
	zgenom load MichaelAquilina/zsh-you-should-use
	zgenom load unixorn/git-extra-commands
	zgenom load peterhurford/git-it-on.zsh
	# below plugin is meant for solarized-dark themed terminals
	zgenom load zlsun/solarized-man

	# theme
	zgenom load subnixr/minimal

	# save all to init script
	zgenom save
fi

# For a complete refresh of rc files, with an opportunity to see update info
alias shrefresh="zgenom update; chezmoi update; vim +PlugInstall +qall; vim +PlugUpdate"

# For the same, but silent (e.g., to set as a cron job)
alias shrefresh_quiet="zgenom update; chezmoi update; vim +PlugInstall +qall; vim +PlugUpdate +qall"

# if using iTerm2 on mac
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# PATH additions
export PATH="$PATH:$HOME/.gnupg"

if [[ -f /etc/lsb-release ]] || [[ -f /etc/os-release ]] then
	export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
	export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"
	export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"
	export PATH="/home/linuxbrew/.linuxbrew/opt/python/libexec/bin:$PATH"
	export PATH=$PATH:/home/linuxbrew/.linuxbrew/opt/go/libexec/bin
	export PATH="/home/linuxbrew/.linuxbrew/sbin:$PATH"
	export PATH"=/home/linuxbrew/.linuxbrew/Homebrew/Library/Homebrew/vendor/portable-ruby/current/bin:$PATH"
fi

# theme config
MNML_RPROMPT=('mnml_cwd 2' mnml_git)

# If using Microsoft Terminal, default to ~ rather than /mnt/c/Users/[username]
# and also alias clip.exe to clip
## WSL1
if [[ "$(uname -a)" == *"Microsoft"* ]]; then
	cd ~
	alias clip="clip.exe"
fi
## WSL2
if [[ "$(uname -a)" == *"microsoft"* ]]; then
	cd ~
	alias clip="clip.exe"
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fzf sourcing
## setup
if [[ ! "$PATH" == *${HOME}/.fzf/bin* ]]; then
	export PATH="${PATH:+${PATH}:}${HOME}/.fzf/bin"
fi
## autocompletion
[[ $- == *i* ]] && source "~/.fzf/shell/completion.zsh" 2> /dev/null
## keybindings
source "${HOME}/.fzf/shell/key-bindings.zsh"

# personal bin folder
if [[ ! "$PATH" == *${HOME}/bin* ]]; then
	export PATH="${PATH:+${PATH}:}${HOME}/bin"
fi
# similar to the above but to satisfy a particular install
if [[ ! "$PATH" == *${HOME}/.local/bin* ]]; then
	export PATH="${PATH:+${PATH}:}${HOME}/.local/bin"
fi
# theming for sharkdp/bat
export BAT_THEME="Solarized (dark)"
# if neovim is present, make that the editor; if not, vim
if [[ `which nvim &>/dev/null && echo $?` == 0 ]]; then
	export EDITOR="nvim"
	export VISUAL="$(which nvim)"
else
	export EDITOR="vim"
fi

# path addition for corbindavenport/nexus-tools
if [[ ! "$PATH" == *${HOME}/.nexustools* ]]; then
	export PATH="${PATH:+${PATH}:}${HOME}/.nexustools"
fi

# annoying workaround for macFUSE issues on macOS
if [[ $(uname) == "Darwin" ]]; then
	alias macfuse_reset="sudo kextunload -b io.macfuse.filesystems.macfuse"
fi

# if 1Password CLI is present, add completions
if [[ `which op &>/dev/null && echo $?` == 0 ]]; then
	eval "$(op completion zsh)"; compdef _op op
fi

# deal with annoying tab-completion issue and enforce complete-on-first
## (not sure how this issue popped up, but... https://imgur.com/U1CqMH8)
zstyle '*' single-ignored complete

# fix homebrew version issues on macOS?
if [ -d "/opt/homebrew" ]; then
	alias vim="/opt/homebrew/bin/vim"
fi

# if cantino/mcfly is present, initialize it
if [[ `which mcfly &>/dev/null && echo $?` == 0 ]]; then
    eval "$(mcfly init zsh)"
fi
